/************************** (C) Copyright 2013 Triol ***************************
* File Name          : LevelMenu.h
* Author             : Kats Eyvhen
* TS Idea            : 2013.03.15
* TS Version         : 2013.03.15
* Description        : Function for level mode menu
*******************************************************************************/

/* Define to prevent recursive inclusion ------------------------------------ */
#ifndef LEVEL_MENU_H
#define LEVEL_MENU_H



/* Includes ------------------------------------------------------------------*/
//#include "Example.h"



/* Exported define -----------------------------------------------------------*/
#define NUM_SCREENS 10

#define ADDR_TEK_PASSWORD_USER    ((43<<7) + 0)
#define ADDR_TEK_PASSWORD_TEXN    ((43<<7) + 2)
#define ADDR_TEK_PASSWORD_MASTER  ((43<<7) + 4)

extern const unsigned char Screens [NUM_SCREENS][3200];

#define MAX_VER_POS                 20
#define MAX_HOR_POS                 20
#define MIN_VER_POS                 0
#define MIN_HOR_POS                 0

#define MAX_POS                     MAX_VER_POS * MAX_HOR_POS

#define COUNT_ITR                   4

typedef struct{
    u16  SnakePos_HOR;
    u16  SnakePos_VER;
}SnakePos_type;

typedef enum{
    Cursor_UP,
    Cursor_DOWN,
    Cursor_LEFT,
    Cursor_RIGHT,
}Cursor_type;

/* Exported macro ------------------------------------------------------------*/



/* Exported types ------------------------------------------------------------*/



/* Exported constants --------------------------------------------------------*/



/* Exported variables --------------------------------------------------------*/



/* Exported function prototypes ----------------------------------------------*/



/* Exported functions --------------------------------------------------------*/

// **************************************************************************
//  Поиск видимых меню и меню групп
// **************************************************************************
u32 FindVisibleMenu_Direct(void *HOF, void *BaseHOF, u16 NumLnk, u16 NumMenu, u16 AdrMenu, TypeVisible_type TypeVisible, u16 * CountMenuInto);

// **************************************************************************
//  Вычитка текущего меню в группе пульта и привода 
// **************************************************************************
void *GetOpisMenuGrp(void *HOF, void *DM, void *BaseHOF, u16 NumMenu, u16 AdrMenuStart, u16 *AdrMenuHOF);

// **************************************************************************
//  Поиск видимых п-ров и складывание указателей на  в глобальных массив п-ров
// **************************************************************************
u32 FindVisibleParam_Direct(void *HOF, void *DM, void *BaseHOF, u16 NumLnk, TypeVisible_type TypeVisible);

// **************************************************************************
//  Установка параметров для работы с корневым меню
// **************************************************************************
void SetRootMenu(HandlerMenuPultNew_struct_type *MenuPult);

// **************************************************************************
//  Востоновления приведущего состояния отоброжения на экране
// **************************************************************************
void GetPosPrev(u32 CntMP, u16 Pos, u16 PosCursor);

// **************************************************************************
// Вывод анимации
// **************************************************************************
void Anime(void);

//************************************
// Установка описателя меню привода
//************************************
void SetHandlerMenuDrive(HandlerMenuChangeDrive_struct_type * HandlerMenuDrv);

//====================================================================
//  Формирование запросов на чтение текущих паролей из привода 
//====================================================================
void ReqTekPassword(void * pHOF);

//====================================================================
//  Игра змейка
//====================================================================
void Snake(void);

//====================================================================
//  Рисуем змейку и "яблоко"
//====================================================================
void DrawSnake(SnakePos_type * LenSnake);

//====================================================================
//  Рисуем звено змейки
//====================================================================
void DrawSnakeTrak(SnakePos_type SnakeTrak);

//====================================================================
//  Рисуем "Яблоко"
//====================================================================
void DrawAppleTrak(SnakePos_type AppleTrak);

//====================================================================
//  Тест связи с NVSA
//====================================================================
void Test_with_NVSA(void);

#endif // LEVEL_MENU_H

/************************** (C) Copyright 2013 Triol **************************/
